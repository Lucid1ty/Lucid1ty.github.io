[{"id":"7b9812fe6cbf2aba598dcdf2de807daf","title":"Test","content":"HelloWorld\n","slug":"Test","date":"2022-05-15T14:38:27.000Z","categories_index":"","tags_index":"测试","author_index":"Cosmica"},{"id":"aac9c8ce07fc33ee24eb2d1de1c42036","title":"图床搭建","content":"注册Gitee账号https://gitee.com/\n创建Gitee仓库\n如上图所示：取好仓库名，勾选初始化仓库后随便选择一个语言，开源许可选择：MulanPSL-2.0\n注意到现在 Gitee 在创建仓库的时候默认只能选择私有，所以等我们创建完成仓库后需要到设置里更改！\n在创建好后进入到仓库页面：\n\n选择右边红色框中的管理，往下拉找到是否开源这个选项：\n\n勾选开源，然后勾选上许可协议，点击保存\n下载安装Node.jshttps://nodejs.org/\n选择稳定版安装即可\n下载安装PicGohttps://github.com/Molunerfinn/PicGo/releases\n我选择的是2.3.0版本，这是目前的稳定版\n配置PicGo打开 PigGo：\n在左边那一栏下拉找到：插件设置\n在出现的搜索框中输入：gitee\n\n安装好这个插件之后重启 PigGo\n之后你就能在图床设置里找到 gitee 了\n\n在repo中填入：你的gitee用户名&#x2F;你刚刚创建的仓库名\n例如我的gitee账户名是：Lucid1ty ，我刚刚创建的仓库名是：images\n那么我这里就填：Lucid1ty&#x2F;images\nbranch里填写你刚刚创建的仓库的分支名，默认是master，可以不用更改\ntoken里填入你的令牌\n如何获取你的令牌？\n打开设置\n\n在设置中下拉找到私人令牌：\n\n在右上角点击生成新令牌\n\n填写描述，然后全选提交即可\n复制它提供给你的令牌，填入到token中即可\npath 和 customPath 参考我的就行\n点击确定，点击设置为默认图床即可\n在 PicGo 的左边栏中最上面点击上传区\n你可以上传一张图片看看 PicGo 是否能正常工作，在你的 gitee 仓库中查看是否有图片上传，如果是，那么说明你的PicGo配置成功\nTypora配置PicGo在 Typora 的设置中\n\n参考上图设置即可\n点击验证图片上传选项，如果成功，则说明 Typora 已经集成好 PicGo，并且能够自动上传\n全文完\n","slug":"图床搭建","date":"2022-05-15T12:32:01.000Z","categories_index":"","tags_index":"教程","author_index":"Cosmica"},{"id":"85a4fd13f9911e90e18459c99085f1c5","title":"博客搭建教程","content":"参考\nhttps://zhuanlan.zhihu.com/p/35668237\nhttps://hexo.io/zh-cn/\nhttps://aurora.tridiamond.tech/zh/\n\n本博客使用的主题\nhttps://github.com/auroral-ui/hexo-theme-aurora\n\n下载安装Node.js在官网下载Node.js: https://nodejs.org/\n安装选项全部默认，一路点击Next\n后安装好之后，按Win+R输入cmd然后回车打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了\n下载安装GitGit官网下载地址\n安装选项还是全部默认，只不过最后一步添加路径时选择Use Git from the Windows Command Prompt，这样我们就可以直接在命令提示符里打开git了\n安装完成后在命令提示符中输入:git --version验证是否安装成功\n添加国内镜像源(可选)如果你在下面的安装过程中(如：安装hexo)出现网络失败等问题可以回来看看这个\nnpm config set registry https://registry.npm.taobao.org\nnpm config set disturl https://npm.taobao.org/dist\n\n取消淘宝镜像：\n方式一：编辑删除\n在git bash中输入：npm config edit\n找到你配置的镜像源删除，然后保存退出即可\n方式二：命令删除\n在git bash中输入：\nnpm config delete registry \nnpm config delete disturl\n\n注册Github账号https://github.com\n在有了Github账号之后，我们新建一个仓库\n在填写仓库名称时注意：输入你自己的Github账号名称，然后后面一定要加.github.io后缀\n这个仓库名一定要设置正确，比如你Github名称叫abc，那么仓库名字一定要是abc.github.io\nREADME初始化也要勾上\n然后项目就建成了，点击Settings，向下拉到最后有个GitHub Pages，点击Choose a theme选择一个主题\n在跳出的页面中选择提交\n然后返回 GitHub Pages\n你会看到它给你提供了一个链接，点击它，那就是你自己的网页\n安装Hexo在合适的地方新建一个文件夹，用来存放自己的博客文件，比如我的博客文件都存放在D:\\Project\\BlogFile目录下\n在该目录下右键点击Git Bash Here，打开git的控制台窗口\n定位到该目录下，输入npm i hexo-cli -g安装Hexo\n安装完后输入hexo -v验证是否安装成功\n然后就要初始化我们的网站，输入hexo init初始化文件夹，接着输入npm install安装必备的组件\n这样本地的网站配置也弄好啦，输入hexo g生成静态网页，然后输入hexo s打开本地服务器，然后浏览器打开：\nhttp://localhost:4000/\n就可以看到我们的博客啦\n按ctrl+c关闭本地服务器\n更新Hexo(可选)//以下命令分别执行即可\nnpm install -g npm-check     //安装npm-check\nnpm-check                    //查看系统插件是否需要升级\nnpm install -g npm-upgrade   //安装npm-upgrade\nnpm-upgrade        //更新package.json\n//在执行npm-upgrade命令后会要求输入yes或者no，直接输入Yes或Y即可\nnpm update -g      //更新全局插件\nnpm update --save  //更新系统插件\n\n卸载Hexo(可选)有时候可能会遇到各种问题，卸载了重新安装一遍也许能解决\n在命令行内运行如下命令即可：\nnpm uninstall hexo-cli -g\n如果怕删除不干净的话\n删除%appdata%/npm-cache这个文件夹\n把上面的路径复制，粘贴到资源管理器的地址栏里面回车就能找到\n连接Github与本地首先打开git bash，然后输入下面命令：\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"Your Email\"\n\n用户名和邮箱根据你注册 Github 的信息自行修改\n然后生成密钥SSH key：\nssh-keygen -t rsa -C \"Your Email\"\n\n打开Github，在头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，名字随便取\ngit bash中输入：\ncat ~/.ssh/id_rsa.pub\n\n将输出的内容复制到框中，点击确定保存\n输入ssh -T git@github.com，如果出现你的用户名，那就成功了\n打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客相关的各种信息\n修改最后一行的配置：\ndeploy:\n  type: git\n  repository: 这个地方填入你刚刚创建的 Github 仓库地址\n  branch: 这个地方填入你Github仓库的分支名(一般是main或者master)\n\n写文章&amp;发布文章首先在博客根目录下右键打开git bash，安装一个扩展npm i hexo-deployer-git\n然后输入hexo new post &quot;Test&quot;，新建一篇文章\n然后打开 D:\\Project\\BlogFile\\source\\_posts 这个目录\n可以发现下面多了一个.md文件\n打开它，你可以在里面编写文章了\n编写完成后保存退出\n在git bash中切换到博客文件的根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到 Github 上。这时打开你的github.io主页就能看到发布的文章啦\n绑定域名施工中\n备份博客源文件施工中\n配置主题有些主题可能需要较高版本的 Hexo 才能使用\n所以在配置主题时要注意版本要求\n比如我使用的主题：Aurora 就需要Hexo5.4+的版本才行\n根据该主题的官方文档配置即可：Aurora主题官方文档\n","slug":"博客搭建教程","date":"2022-05-15T07:47:32.000Z","categories_index":"","tags_index":"教程","author_index":"Cosmica"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-05-15T06:57:37.637Z","categories_index":"","tags_index":"","author_index":"Cosmica"}]